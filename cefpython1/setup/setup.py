from distutils.core import setup
from distutils.extension import Extension
from Cython.Distutils import build_ext
import sys
import platform

"""
Building libcef_dll_wrapper
---------------------------

libcef_dll_wrapper needs to be compiled with /MD, otherwise you get linker errors
of type "already defined". When you try to compile using /MD you may get warnings:
  
  warning C4275: non dll-interface class 'stdext::exception' used as base for
  dll-interface class 'std::bad_typeid' see declaration of 'stdext::exception'
  see declaration of 'std::bad_typeid'

Which results in build errors. To solve it you need to add command line option:

  -D_HAS_EXCEPTIONS=1

Enabling C++ exceptions ("/EHsc") is not required.
"""

# A way around Python 3.2 bug: UNAME_SYSNAME is not set.
def GeneratePlatformPXI():
	print("Generating include_cython/platform.pxi")
	with open("./../include_cython/platform.pxi", "w") as fd:
		fd.write('# This file was automatically generated by setup.py\n'
		         'DEF UNAME_SYSNAME = "%s"\n' % platform.uname()[0])

GeneratePlatformPXI()

ext_modules = [Extension(
	
	"cefpython_py%s" % (str(sys.version_info[0])+str(sys.version_info[1])),
	["cefpython.pyx"],
	
	language='c++',	
	include_dirs=[r'./../', r'./../include_cython/'],
	
	library_dirs=[
		r'./',
		r"c:/Program Files (x86)/Windows Kits/8.0/Lib/win8/um/x86/",
		r'./../http_authentication/Release/',
		r'./../v8function_handler/Release_py%s%s/' % (sys.version_info.major, sys.version_info.minor),
		r'./../client_handler/Release_py%s%s/' % (sys.version_info.major, sys.version_info.minor)
	],
	
	libraries=[
		'libcef',
		'libcef_dll_wrapper',
		'User32',
		'http_authentication', # Build with /MD.
		'v8function_handler_py%s%s' % (sys.version_info.major, sys.version_info.minor), # Build with /MD.
		'client_handler_py%s%s' % (sys.version_info.major, sys.version_info.minor) # Build with /MD.
	],
	
	# /EHsc - using STL string, multimap and others that use C++ exceptions.
	extra_compile_args=['/EHsc'],
	
	# '/ignore:4217' - silence warnings: "locally defined symbol _V8FunctionHandler_Execute
	#                  imported in function "public: virtual bool __thiscall V8FunctionHandler::Execute"
	extra_link_args=['/ignore:4217']
)]

setup(
	name = 'cefpython_py%s' % (str(sys.version_info[0])+str(sys.version_info[1])),
	cmdclass = {'build_ext': build_ext},
	ext_modules = ext_modules
)